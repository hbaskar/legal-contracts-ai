# Azure Function File Upload Service - Environment Configuration
# Copy this file to .env.local for your local development settings

# === AZURE FUNCTIONS CORE SETTINGS ===
AzureWebJobsStorage=UseDevelopmentStorage=true
FUNCTIONS_WORKER_RUNTIME=python
AzureWebJobsFeatureFlags=EnableWorkerIndexing
PYTHON_ISOLATE_WORKER_DEPENDENCIES=1

# === AZURE STORAGE CONFIGURATION ===
# For production, replace with your actual storage account details
AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=your_storage_account;AccountKey=your_key;EndpointSuffix=core.windows.net
AZURE_STORAGE_CONTAINER_NAME=uploads

# === DATABASE CONFIGURATION ===
# Use 'sqlite' for local development, 'azuresql' for production
DATABASE_TYPE=sqlite
SQLITE_DATABASE_PATH=./data/metadata.db

# === AZURE SQL CONFIGURATION ===
# Choose authentication method: 'managed_identity', 'ad_password', 'ad_integrated', 'sql_auth', 'auto'
AZURE_SQL_AUTH_METHOD=auto
AZURE_SQL_SERVER=your_server.database.windows.net
AZURE_SQL_DATABASE=your_database_name
AZURE_SQL_DRIVER=ODBC Driver 18 for SQL Server
AZURE_SQL_PORT=1433

# === AZURE SQL AUTHENTICATION OPTIONS ===
# Option 1: Managed Identity (RECOMMENDED for Azure-hosted apps)
# AZURE_SQL_MANAGED_IDENTITY_CLIENT_ID=your_user_assigned_mi_client_id  # Optional: for user-assigned MI

# Option 2: Azure AD Password Authentication
# AZURE_SQL_USERNAME=your_email@domain.com
# AZURE_SQL_PASSWORD=your_password

# Option 3: SQL Server Authentication (NOT RECOMMENDED for production)
# AZURE_SQL_USERNAME=sql_username
# AZURE_SQL_PASSWORD=sql_password

# Option 4: Direct connection string (overrides all above)
# AZURE_SQL_CONNECTION_STRING=Server=tcp:your_server.database.windows.net,1433;Database=your_db;Authentication=ActiveDirectoryMsi;Encrypt=yes;

# === DOCUMENT PROCESSING CONFIGURATION ===
# Default chunking method for document processing
# Options: 'intelligent', 'heading', 'sentence', 'basic', 'paragraph'
DEFAULT_CHUNKING_METHOD=intelligent

# === LOCAL DEVELOPMENT OPTIONS ===
# Uncomment and modify as needed for local development

# For Azurite (local storage emulator):
# 1. Install: npm install -g azurite
# 2. Run: azurite --silent --location ./azurite --debug ./azurite/debug.log
# 3. Keep AzureWebJobsStorage=UseDevelopmentStorage=true

# For local Azure Storage account:
# AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=yourlocalstorageaccount;AccountKey=yourkey;EndpointSuffix=core.windows.net

# === PRODUCTION CONFIGURATION NOTES ===
# For production deployment:
# 1. Change DATABASE_TYPE=azuresql
# 2. Update AZURE_SQL_CONNECTION_STRING with production details
# 3. Update AZURE_STORAGE_CONNECTION_STRING with production storage
# 4. Use managed identity for enhanced security